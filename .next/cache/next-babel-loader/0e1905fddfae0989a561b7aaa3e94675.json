{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Desktop\\\\gtau-fe-test-master\\\\components\\\\Listings.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nconst ACTIONS = ['View', 'Reply'];\nconst url = 'api/listings';\n\nconst formatAsCurrency = int => {\n  if (int.length !== 0) {\n    return '$ ' + parseInt(int).toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  const {\n    title,\n    description,\n    imgUrl,\n    price,\n    location\n  } = props.car;\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: \"price-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__price text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, formatAsCurrency(price)), __jsx(\"p\", {\n    className: \"listing__location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, location)), __jsx(\"img\", {\n    className: \"listing__image\",\n    src: imgUrl,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    className: \"listing__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, description), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"view\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"reply\")));\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: cars,\n    1: setCars\n  } = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  } else if (isError || !cars) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Something went wrong, please try again later...\"));\n  } // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, `${cars.length} results `), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"for \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Ferrari \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"in \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Australia \"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, cars.map((car, index) => __jsx(Listing, {\n    key: index,\n    car: car,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/shaha/Desktop/gtau-fe-test-master/components/Listings.js"],"names":["React","useState","useEffect","ACTIONS","url","formatAsCurrency","int","length","parseInt","toFixed","replace","Listing","props","title","description","imgUrl","price","location","car","Listings","loading","setLoading","isError","setIsError","cars","setCars","fetchCars","reponse","fetch","newCars","json","err","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;AAEA,MAAMC,GAAG,GAAG,cAAZ;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC,MAAIA,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WACE,OACAC,QAAQ,CAACF,GAAD,CAAR,CACGG,OADH,CACW,CADX,EAEGC,OAFH,CAEW,yBAFX,EAEsC,KAFtC,CAFF;AAMD;AACF,CATD;;AAWA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA;AAArC,MAAkDL,KAAK,CAACM,GAA9D;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCL,KAAhC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CR,gBAAgB,CAACW,KAAD,CAA1D,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,QAAlC,CAFF,CAFF,EAOE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,EAAEF,MAArC;AAA6C,IAAA,GAAG,EAAEF,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCC,WAArC,CARF,EASE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CATF,CADF;AAgBD,CAtBD;;AAwBA,MAAMK,QAAQ,GAAIP,KAAD,IAAW;AAC1B;AACA;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAA,OAACuB,IAAD;AAAA,OAAOC;AAAP,MAAkBxB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMyB,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAACxB,GAAD,CAA3B;AACA,YAAMyB,OAAO,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAtB;AAEAL,MAAAA,OAAO,CAACI,OAAD,CAAP;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAND,CAME,OAAOU,GAAP,EAAY;AACZV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAXD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAIN,OAAJ,EAAa;AACX,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD,GAND,MAMO,IAAIE,OAAO,IAAI,CAACE,IAAhB,EAAsB;AAC3B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,CADF;AAKD,GAnCyB,CAqC1B;AACA;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B,GAAEA,IAAI,CAACjB,MAAO,WAA5C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,IAAI,CAACQ,GAAL,CAAS,CAACd,GAAD,EAAMe,KAAN,KACR,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAqB,IAAA,GAAG,EAAEf,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAXF,CADF;AAmBD,CA3DD;;AA6DA,eAAeC,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst url = 'api/listings';\n\nconst formatAsCurrency = (int) => {\n  if (int.length !== 0) {\n    return (\n      '$ ' +\n      parseInt(int)\n        .toFixed(0)\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    );\n  }\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  const { title, description, imgUrl, price, location } = props.car;\n\n  return (\n    <div className='listing'>\n      <h3 className='listing__title'>{title}</h3>\n      <div className='price-location-container'>\n        <h3 className='listing__price text-blue'>{formatAsCurrency(price)}</h3>\n        <p className='listing__location'>{location}</p>\n      </div>\n\n      <img className='listing__image' src={imgUrl} alt={title} />\n      <p className='listing__description'>{description}</p>\n      <div className='buttons'>\n        <button>view</button>\n        <button>reply</button>\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [cars, setCars] = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  if (loading) {\n    return (\n      <section>\n        <h1>Loading...</h1>\n      </section>\n    );\n  } else if (isError || !cars) {\n    return (\n      <section>\n        <h1>Something went wrong, please try again later...</h1>\n      </section>\n    );\n  }\n\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h2>Search Results</h2>\n        <p>\n          <span className='text-blue'>{`${cars.length} results `}</span>\n          <span>for </span>\n          <span className='text-blue'>Ferrari </span>\n          <span>in </span>\n          <span className='text-blue'>Australia </span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {cars.map((car, index) => (\n          <Listing key={index} car={car} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}