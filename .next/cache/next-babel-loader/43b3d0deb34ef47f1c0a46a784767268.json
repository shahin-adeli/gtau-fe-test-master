{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Desktop\\\\gtau-fe-test-master\\\\components\\\\Listings.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nvar ACTIONS = ['View', 'Reply'];\nvar url = 'api/listings';\n\nvar formatAsCurrency = function formatAsCurrency(price) {\n  if (typeof price === 'string') {\n    return price;\n  }\n\n  return '$ ' + price.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n\nvar Listing = function Listing(_ref) {\n  var car = _ref.car;\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  var title = car.title,\n      description = car.description,\n      imgUrl = car.imgUrl,\n      price = car.price,\n      location = car.location;\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: \"price-location-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__price text-blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, formatAsCurrency(price)), __jsx(\"p\", {\n    className: \"listing__location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, location)), __jsx(\"div\", {\n    className: \"listing__image-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: \"listing__image\",\n    src: imgUrl,\n    alt: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    className: \"listing__description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, description), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return console.log('View:', title);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"view\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return console.log('Reply:', title);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"reply\")));\n};\n\n_c = Listing;\n\nvar Listings = function Listings(props) {\n  _s();\n\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isError = _useState2[0],\n      setIsError = _useState2[1];\n\n  var _useState3 = useState([]),\n      cars = _useState3[0],\n      setCars = _useState3[1];\n\n  var fetchCars = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reponse, newCars;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(url);\n\n            case 3:\n              reponse = _context.sent;\n              _context.next = 6;\n              return reponse.json();\n\n            case 6:\n              newCars = _context.sent;\n              setCars(newCars);\n              setLoading(false);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              setLoading(false);\n              setIsError(true);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function fetchCars() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchCars();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (isError) {\n    return __jsx(\"section\", {\n      className: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Something went wrong, please try again later...\"));\n  } // if (cars.length === 0) {\n  //   return (\n  //     <section>\n  //       <h1>Nothing Was Found ...</h1>\n  //     </section>\n  //   );\n  // }\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"\".concat(cars.length, \" results \")), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"for \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Ferrari \"), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"in \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Australia \"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, cars.length === 0 && __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 31\n    }\n  }, \"Nothing was matched for your search ...\"), cars.map(function (car, index) {\n    return __jsx(Listing, {\n      key: index,\n      car: car,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\n_s(Listings, \"h+DgYKMo0ItliBG29TwDN4I3Fc0=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["C:/Users/shaha/Desktop/gtau-fe-test-master/components/Listings.js"],"names":["React","useState","useEffect","ACTIONS","url","formatAsCurrency","price","toFixed","replace","Listing","car","title","description","imgUrl","location","console","log","Listings","props","loading","setLoading","isError","setIsError","cars","setCars","fetchCars","fetch","reponse","json","newCars","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst url = 'api/listings';\n\nconst formatAsCurrency = (price) => {\n  if (typeof price === 'string') {\n    return price;\n  }\n  return '$ ' + price.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n\nconst Listing = ({ car }) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  const { title, description, imgUrl, price, location } = car;\n\n  return (\n    <div className='listing'>\n      <h3 className='listing__title'>{title}</h3>\n      <div className='price-location-container'>\n        <h3 className='listing__price text-blue'>{formatAsCurrency(price)}</h3>\n        <p className='listing__location'>{location}</p>\n      </div>\n\n      <div className='listing__image-container'>\n        <img className='listing__image' src={imgUrl} alt={title} />\n      </div>\n\n      <p className='listing__description'>{description}</p>\n      <div className='buttons'>\n        <button onClick={() => console.log('View:', title)}>view</button>\n        <button onClick={() => console.log('Reply:', title)}>reply</button>\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [cars, setCars] = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  if (loading) {\n    return (\n      <section>\n        <h1>Loading...</h1>\n      </section>\n    );\n  }\n  if (isError) {\n    return (\n      <section className='error'>\n        <h1>Something went wrong, please try again later...</h1>\n      </section>\n    );\n  }\n\n  // if (cars.length === 0) {\n  //   return (\n  //     <section>\n  //       <h1>Nothing Was Found ...</h1>\n  //     </section>\n  //   );\n  // }\n\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h2>Search Results</h2>\n        <p>\n          <span className='text-blue'>{`${cars.length} results `}</span>\n          <span>for </span>\n          <span className='text-blue'>Ferrari </span>\n          <span>in </span>\n          <span className='text-blue'>Australia </span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {cars.length === 0 && <h1>Nothing was matched for your search ...</h1>}\n        {cars.map((car, index) => (\n          <Listing key={index} car={car} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}