{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Desktop\\\\gtau-fe-test-master\\\\components\\\\Listings.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nconst ACTIONS = ['View', 'Reply'];\nconst url = 'api/listings';\n\nconst formatAsCurrency = price => {\n  if (typeof price === 'string') {\n    return price;\n  }\n\n  return '$ ' + price.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  const {\n    title,\n    description,\n    imgUrl,\n    price,\n    location\n  } = props.car;\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: \"price-location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"listing__price text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, formatAsCurrency(price)), __jsx(\"p\", {\n    className: \"listing__location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, location)), __jsx(\"div\", {\n    className: \"listing__image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: \"listing__image\",\n    src: imgUrl,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    className: \"listing__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, description), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => console.log('View:', title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"view\"), __jsx(\"button\", {\n    onClick: () => console.log('Reply:', title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"reply\")));\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: cars,\n    1: setCars\n  } = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (isError || !cars) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Something went wrong, please try again later...\"));\n  } // if (cars.length === 0) {\n  //   return (\n  //     <section>\n  //       <h1>Nothing Was Found ...</h1>\n  //     </section>\n  //   );\n  // }\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, `${cars.length} results `), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"for \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Ferrari \"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"in \"), __jsx(\"span\", {\n    className: \"text-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Australia \"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, cars.length === 0 && __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 31\n    }\n  }, \"Nothing was found for your search ...\"), cars.map((car, index) => __jsx(Listing, {\n    key: index,\n    car: car,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/shaha/Desktop/gtau-fe-test-master/components/Listings.js"],"names":["React","useState","useEffect","ACTIONS","url","formatAsCurrency","price","toFixed","replace","Listing","props","title","description","imgUrl","location","car","console","log","Listings","loading","setLoading","isError","setIsError","cars","setCars","fetchCars","reponse","fetch","newCars","json","err","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst url = 'api/listings';\n\nconst formatAsCurrency = (price) => {\n  if (typeof price === 'string') {\n    return price;\n  }\n  return '$ ' + price.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  const { title, description, imgUrl, price, location } = props.car;\n\n  return (\n    <div className='listing'>\n      <h3 className='listing__title'>{title}</h3>\n      <div className='price-location-container'>\n        <h3 className='listing__price text-blue'>{formatAsCurrency(price)}</h3>\n        <p className='listing__location'>{location}</p>\n      </div>\n\n      <div className='listing__image-container'>\n        <img className='listing__image' src={imgUrl} alt={title} />\n      </div>\n\n      <p className='listing__description'>{description}</p>\n      <div className='buttons'>\n        <button onClick={() => console.log('View:', title)}>view</button>\n        <button onClick={() => console.log('Reply:', title)}>reply</button>\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [cars, setCars] = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  if (loading) {\n    return (\n      <section>\n        <h1>Loading...</h1>\n      </section>\n    );\n  }\n  if (isError || !cars) {\n    return (\n      <section>\n        <h1>Something went wrong, please try again later...</h1>\n      </section>\n    );\n  }\n\n  // if (cars.length === 0) {\n  //   return (\n  //     <section>\n  //       <h1>Nothing Was Found ...</h1>\n  //     </section>\n  //   );\n  // }\n\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h2>Search Results</h2>\n        <p>\n          <span className='text-blue'>{`${cars.length} results `}</span>\n          <span>for </span>\n          <span className='text-blue'>Ferrari </span>\n          <span>in </span>\n          <span className='text-blue'>Australia </span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {cars.length === 0 && <h1>Nothing was found for your search ...</h1>}\n        {cars.map((car, index) => (\n          <Listing key={index} car={car} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}