{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Desktop\\\\gtau-fe-test-master\\\\components\\\\Listings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nvar ACTIONS = ['View', 'Reply'];\nvar url = 'api/listings';\n\nvar formatAsCurrency = function formatAsCurrency(_int) {// TODO\n};\n\nvar Listing = function Listing(props) {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = Listing;\n\nvar Listings = function Listings(props) {\n  _s();\n\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cars = _useState4[0],\n      setCars = _useState4[1];\n\n  var fetchCars = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reponse, newCars;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              reponse = _context.sent;\n              _context.next = 5;\n              return reponse.json();\n\n            case 5:\n              newCars = _context.sent;\n              setCars(newCars);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCars() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchJobs();\n    console.log(cars);\n  }, []);\n\n  if (loading) {\n    return __jsx(\"section\", {\n      className: \"section loading\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  } // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Listings, \"k3BAqqen/dkPSW0deqVzPwPEi8U=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["C:/Users/shaha/Desktop/gtau-fe-test-master/components/Listings.js"],"names":["ACTIONS","url","formatAsCurrency","int","Listing","props","Listings","useState","loading","setLoading","cars","setCars","fetchCars","fetch","reponse","json","newCars","useEffect","fetchJobs","console","log"],"mappings":";;;;;;;;;;AAAA,IAAMA,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;AAEA,IAAMC,GAAG,GAAG,cAAZ;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAS,CAChC;AACD,CAFD;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB;AACA;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CALD;;KAAMD,O;;AAON,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACD,KAAD,EAAW;AAAA;;AAC1B;AACA;AACA,kBAA8BE,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMC,KAAK,CAACZ,GAAD,CADX;;AAAA;AACVa,cAAAA,OADU;AAAA;AAAA,qBAEMA,OAAO,CAACC,IAAR,EAFN;;AAAA;AAEVC,cAAAA,OAFU;AAGhBL,cAAAA,OAAO,CAACK,OAAD,CAAP;AACAP,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATG,SAAS;AAAA;AAAA;AAAA,KAAf;;AAMAK,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,SAAS;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAIF,OAAJ,EAAa;AACX,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD,GAtByB,CAwB1B;AACA;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAjCD;;GAAMF,Q;;MAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["const ACTIONS = ['View', 'Reply'];\n\nconst url = 'api/listings';\n\nconst formatAsCurrency = (int) => {\n  // TODO\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  return <div className='listing'></div>;\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const [loading, setLoading] = useState(true);\n  const [cars, setCars] = useState([]);\n\n  const fetchCars = async () => {\n    const reponse = await fetch(url);\n    const newCars = await reponse.json();\n    setCars(newCars);\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchJobs();\n    console.log(cars);\n  }, []);\n  if (loading) {\n    return (\n      <section className='section loading'>\n        <h1>Loading...</h1>\n      </section>\n    );\n  }\n\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  return (\n    <div>\n      <div className='listings__header'></div>\n      <div className='listings__grid'></div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}