{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Desktop\\\\gtau-fe-test-master\\\\components\\\\Listings.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nconst ACTIONS = ['View', 'Reply'];\nconst url = 'api/listings';\n\nconst formatAsCurrency = int => {// TODO\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  const {\n    title,\n    description,\n    imgUrl,\n    price,\n    location\n  } = props.car;\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, price), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, location), __jsx(\"img\", {\n    src: imgUrl,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, description), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"view\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"reply\"));\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: cars,\n    1: setCars\n  } = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  } else if (isError || cars) {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Something went wrong, please try again...\"));\n  } // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, cars.map((car, index) => __jsx(Listing, {\n    key: index,\n    car: car,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/shaha/Desktop/gtau-fe-test-master/components/Listings.js"],"names":["React","useState","useEffect","ACTIONS","url","formatAsCurrency","int","Listing","props","title","description","imgUrl","price","location","car","Listings","loading","setLoading","isError","setIsError","cars","setCars","fetchCars","reponse","fetch","newCars","json","err","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst url = 'api/listings';\n\nconst formatAsCurrency = (int) => {\n  // TODO\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  const { title, description, imgUrl, price, location } = props.car;\n\n  return (\n    <div className='listing'>\n      <h3>{title}</h3>\n      <h3>{price}</h3>\n      <div>{location}</div>\n      <img src={imgUrl} alt={title} />\n      <p>{description}</p>\n      <button>view</button>\n      <button>reply</button>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [cars, setCars] = useState([]);\n\n  const fetchCars = async () => {\n    try {\n      const reponse = await fetch(url);\n      const newCars = await reponse.json();\n\n      setCars(newCars);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  if (loading) {\n    return (\n      <section>\n        <h1>Loading...</h1>\n      </section>\n    );\n  } else if (isError || cars) {\n    return (\n      <section>\n        <h1>Something went wrong, please try again...</h1>\n      </section>\n    );\n  }\n\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  return (\n    <div>\n      <div className='listings__header'></div>\n      <div className='listings__grid'>\n        {cars.map((car, index) => (\n          <Listing key={index} car={car} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}